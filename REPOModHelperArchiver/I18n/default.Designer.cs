//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace REPOModHelperArchiver.I18n {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class _default {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal _default() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("REPOModHelperArchiver.I18n.default", typeof(_default).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build.
        /// </summary>
        internal static string FormBuild_FormBuildTitle {
            get {
                return ResourceManager.GetString("FormBuild/FormBuildTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop Build.
        /// </summary>
        internal static string FormBuild_StopBuild {
            get {
                return ResourceManager.GetString("FormBuild/StopBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        internal static string FormMain_BtnStartText {
            get {
                return ResourceManager.GetString("FormMain/BtnStartText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create archive success!.
        /// </summary>
        internal static string FormMain_CreateArchiveSuccess {
            get {
                return ResourceManager.GetString("FormMain/CreateArchiveSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author URL:.
        /// </summary>
        internal static string FormMain_CustomAuthorURL {
            get {
                return ResourceManager.GetString("FormMain/CustomAuthorURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Base Mod.
        /// </summary>
        internal static string FormMain_CustomBase {
            get {
                return ResourceManager.GetString("FormMain/CustomBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base Mod Name:.
        /// </summary>
        internal static string FormMain_CustomBaseName {
            get {
                return ResourceManager.GetString("FormMain/CustomBaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The custom base mod name contains special characters!.
        /// </summary>
        internal static string FormMain_CustomBaseNameNotValid {
            get {
                return ResourceManager.GetString("FormMain/CustomBaseNameNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base Mod Path:.
        /// </summary>
        internal static string FormMain_CustomBasePath {
            get {
                return ResourceManager.GetString("FormMain/CustomBasePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The custom base mod folder does not exist! Please confirm that the selected folder contains a BepInEx subdirectory!.
        /// </summary>
        internal static string FormMain_CustomBasePathNotExists {
            get {
                return ResourceManager.GetString("FormMain/CustomBasePathNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Optional Mods Path:.
        /// </summary>
        internal static string FormMain_CustomOptionalPath {
            get {
                return ResourceManager.GetString("FormMain/CustomOptionalPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The custom optional mods folder does not exist!.
        /// </summary>
        internal static string FormMain_CustomOptionalPathNotExists {
            get {
                return ResourceManager.GetString("FormMain/CustomOptionalPathNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to README:.
        /// </summary>
        internal static string FormMain_CustomREADME {
            get {
                return ResourceManager.GetString("FormMain/CustomREADME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update URL:.
        /// </summary>
        internal static string FormMain_CustomUpdateURL {
            get {
                return ResourceManager.GetString("FormMain/CustomUpdateURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string FormMain_Error {
            get {
                return ResourceManager.GetString("FormMain/Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to REPO Mod Helper Archiver.
        /// </summary>
        internal static string FormMain_FormMainTitle {
            get {
                return ResourceManager.GetString("FormMain/FormMainTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installer file missing:.
        /// </summary>
        internal static string FormMain_InstallerFileMissing {
            get {
                return ResourceManager.GetString("FormMain/InstallerFileMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select custom base mod folder..
        /// </summary>
        internal static string FormMain_SelectCustomBaseFolder {
            get {
                return ResourceManager.GetString("FormMain/SelectCustomBaseFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select custom optional mod folder..
        /// </summary>
        internal static string FormMain_SelectCustomOptionalFolder {
            get {
                return ResourceManager.GetString("FormMain/SelectCustomOptionalFolder", resourceCulture);
            }
        }
    }
}
